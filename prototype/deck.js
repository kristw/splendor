var Card = require('./card.js');
var shuffle = require('shuffle-array');
var common = require('./common.js');

var Deck = function(tier){
	this.tier = tier;
	this.cards = this.prepareCards();
};

module.exports = Deck;

Deck.prototype.prepareCards = function(){
	if(this.tier < 0 || this.tier > 2){
		return console.log("ERROR:  Cannot prepare tierless deck!");
	}
	return shuffle(this.getCardStats()[this.tier].map(this.makeCard.bind(this)));
};

Deck.prototype.makeCard = function(cardStats){
	return new Card(cardStats[0], cardStats[1], common.convertCost(cardStats[2]), cardStats[3]);
};

Deck.prototype.getCardStats = function(){
	return [
		[
			["B", 3, [0,3,3,3,5], 2],
			["G", 3, [3,0,3,5,3], 2],
			["R", 3, [5,3,0,3,3], 2],
			["W", 3, [3,3,5,0,3], 2],
			["b", 3, [3,5,3,3,0], 2],

			["B", 4, [3,0,0,6,3], 2],
			["G", 4, [6,3,0,3,0], 2],
			["R", 4, [3,6,3,0,0], 2],
			["W", 4, [0,0,3,3,6], 2],
			["b", 4, [0,3,6,0,3], 2],

			["B", 4, [0,0,0,7,0], 2],
			["G", 4, [7,0,0,0,0], 2],
			["R", 4, [0,7,0,0,0], 2],
			["W", 4, [0,0,0,0,7], 2],
			["b", 4, [0,0,7,0,0], 2],

			["B", 5, [3,0,0,7,0], 2],
			["G", 5, [7,3,0,0,0], 2],
			["R", 5, [0,7,3,0,0], 2],
			["W", 5, [0,0,0,3,7], 2],
			["b", 5, [0,0,7,0,3], 2],
		],

		[
			["B", 3, [6,0,0,0,0], 1],
			["G", 3, [0,6,0,0,0], 1],
			["R", 3, [0,0,6,0,0], 1],
			["W", 3, [0,0,0,6,0], 1],
			["b", 3, [0,0,0,0,6], 1],

			["B", 2, [5,0,0,0,0], 1],
			["G", 2, [0,5,0,0,0], 1],
			["R", 2, [0,0,0,0,5], 1],
			["W", 2, [0,0,5,0,0], 1],
			["b", 2, [0,0,0,5,0], 1],

			["B", 2, [3,0,0,5,0], 1],
			["G", 2, [5,3,0,0,0], 1],
			["R", 2, [0,0,0,3,5], 1],
			["W", 2, [0,0,5,0,3], 1],
			["b", 2, [0,5,3,0,0], 1],

			["B", 2, [0,0,1,2,4], 1],
			["G", 2, [2,0,0,4,1], 1],
			["R", 2, [4,2,0,1,0], 1],
			["W", 2, [0,1,4,0,2], 1],
			["b", 2, [1,4,2,0,0], 1],	

			["B", 1, [2,2,3,0,0], 1],
			["G", 1, [3,0,0,2,2], 1],
			["R", 1, [0,0,2,2,3], 1],
			["W", 1, [0,3,2,0,2], 1],
			["b", 1, [2,2,0,3,0], 1],	

			["B", 1, [2,3,0,0,3], 1],
			["G", 1, [0,2,3,3,0], 1],
			["R", 1, [3,0,2,0,3], 1],
			["W", 1, [3,0,3,2,0], 1],
			["b", 1, [0,3,0,3,2], 1],	

		],

		[
			["B", 1, [0,0,4,0,0], 0],
			["G", 1, [0,0,0,0,4], 0],
			["R", 1, [0,0,0,4,0], 0],
			["W", 1, [0,4,0,0,0], 0],
			["b", 1, [4,0,0,0,0], 0],

			["B", 0, [0,1,1,1,1], 0],
			["G", 0, [1,0,1,1,1], 0],
			["R", 0, [1,1,0,1,1], 0],
			["W", 0, [1,1,1,0,1], 0],
			["b", 0, [1,1,1,1,0], 0],

			["B", 0, [0,1,2,1,1], 0],
			["G", 0, [1,0,1,1,2], 0],
			["R", 0, [1,1,0,2,1], 0],
			["W", 0, [1,2,1,0,1], 0],
			["b", 0, [2,1,1,1,0], 0],

			["B", 0, [0,2,2,1,0], 0],
			["G", 0, [1,0,2,0,2], 0],
			["R", 0, [0,1,0,2,2], 0],
			["W", 0, [2,2,0,0,1], 0],
			["b", 0, [2,0,1,2,0], 0],

			["B", 0, [0,0,0,1,2], 0],
			["G", 0, [1,0,0,2,0], 0],
			["R", 0, [2,1,0,0,0], 0],
			["W", 0, [0,0,2,0,1], 0],
			["b", 0, [0,2,1,0,0], 0],

			["B", 0, [0,0,0,0,3], 0],
			["G", 0, [0,0,3,0,0], 0],
			["R", 0, [0,0,0,3,0], 0],
			["W", 0, [3,0,0,0,0], 0],
			["b", 0, [0,3,0,0,0], 0],

			["B", 0, [1,3,1,0,0], 0],
			["G", 0, [3,1,0,1,0], 0],
			["R", 0, [0,0,1,1,3], 0],
			["W", 0, [1,0,0,3,1], 0],
			["b", 0, [0,1,3,0,1], 0],

			["B", 0, [0,2,0,0,2], 0],
			["G", 0, [2,0,2,0,0], 0],
			["R", 0, [0,0,2,2,0], 0],
			["W", 0, [2,0,0,0,2], 0],
			["b", 0, [0,2,0,2,0], 0],
		]
	].reverse();
}